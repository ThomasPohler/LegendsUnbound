  /**************************/
 /* DEFINE COLOR VARIABLES */
/**************************/

body {
    /* These variables are not changed in dark mode: */
    --color-accent: #0075FF;
    --color-button: #CCCCCC;
    --color-button-hover: #D8D8D8;
    --color-button-active: #C1C1C1;

    /* These variables are changed in dark mode: */
    --color-background: #F2F2F2;
    --color-border: #3F3F3F;
    --color-container: #E5E5E5;
    --color-highlight: #B2B2B2;
    --color-text: black;
}
body.sheet-darkmode {
    --color-background: #333333;
    --color-border: black;
    --color-container: #1F1F1F;
    --color-highlight: #4C4C4C;
    --color-text: #E6E6E6;
}





  /********/
 /* MISC */
/********/

.hidden {
    display: none;
}

.invis {
    pointer-events: none;
    cursor: default;
}



.container-style {
	border: 2px solid var(--color-border);
	background-color: var(--color-container);
	padding: 3px;
	border-radius: 5px;
	margin-bottom: 6px;
    position: relative;
    width: fit-content;
    overflow: hidden;
}



.hr {
    background-color: var(--color-highlight);
    height: 1px;
    margin-top: 8px;
    margin-bottom: 8px;
}
.vr {
    background-color: #666666;
    height: 100%;
    width: 1px;
    margin: 0px auto;
}



button {
    width: 80px;
    height: 20px;
	background-color: #CCCCCC;
	border: 1px var(--color-border) solid;
	padding-bottom: 2px;
	padding-top: 2px;
	border-radius: 6px;
    transition: all 0.3s, border-color 0s;
    overflow: hidden;
}
button:hover {
    background-color: #D8D8D8;
}
button:active {
    background-color: #C1C1C1;
}

button.small {
    width: 12px;
    height: 20px;
}

button input {
    width: 20px !important;
    float: left;
    position: relative;
    bottom: 3px;
    right: 6px;
    border-right: 1px solid var(--color-border);
}
button span {
    color: black;
    position: relative;
    top: 1.5px;
    cursor: pointer;
}



button.checkbox {
    background-color: white !important;
    width: 12px !important;
    height: 12px !important;
    border-radius: 3px;
    border: 1px var(--color-border) solid;
    padding: 0px;
    display: inline;
}
button.checkbox.checked {
    background-color: var(--color-accent) !important;
}



input[type=number] {
    width: 50px;
}



span {
    color: var(--color-text);
}



/* Controls the background color */
#dialog-window {
    background-color: var(--color-background) !important;
}
.tab-pane {
    background-color: var(--color-background);
}



/* This controls the color of the tabs above the character sheet */
.nav.nav-tabs {
    background-color: white;
    padding-left: 10px;
    padding-right: 10px;
    border-left: 1px solid #DDDDDD;
    border-right: 1px solid #DDDDDD;
}
body.sheet-darkmode .nav.nav-tabs {
    background-color: var(--color-container);
    border: 1px solid #5C5C5C;
    border-top: 1px solid black;
}
.nav.nav-tabs li.active > a {
    background-color: var(--color-background);
}





/* TPTODO TRAITS */
.button-box {
    display: grid;
    grid-template-columns: 137px 137px 137px;
    row-gap: 3px;
    width: 408px;
    margin-top: -25px;
}
#undocked_button_box {
    position: fixed;
    top: 47px;
    right: 30px;
    z-index: 255;
}
.button-box button {
    width: 120px;
}
.button-box > span {
    margin: 0px auto;
    color: var(--color-border);
}
.button-box > input {
    width: 100%;
}

.button-box-docker {
    position: relative;
    z-index: 10;
}





/*TPTODO comment here*/

.main-width {
    width: 475px;
}
textarea.main-width {
    width: 465px;
    resize: vertical;
}



#character_box {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    text-align: center;
}

#character_box input {
    width: 100%;
}

.character-box-span {
    display: block;
    text-align: center;
}



#attribute_box {
    display: grid;
    grid-template-columns: repeat(5, 60px);
}



#tolerance_box {
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    column-gap: 3px;
}
#tolerance_box span {
    margin: 0px auto;
}
#tolerance_box input {
    min-width: 35px;
    width: 100%;
}



/* TPTODO remove all the unnecessary collapse words */
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="1"] + .ability-content .collapse-uses,
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="3"] + .ability-content .collapse-uses,
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="5"] + .ability-content .collapse-uses {
    display: none;
}

.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="1"] + .ability-content .ability-attack,
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="2"] + .ability-content .ability-attack {
    display: none;
}

.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="5"] + .ability-content .non-melee,
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="6"] + .ability-content .non-melee {
    display: none;
}
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="5"] + .ability-content button.melee,
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="6"] + .ability-content button.melee {
    width: 103px;
}
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="5"] + .ability-content input.melee,
.repcontainer[data-groupname="repeating_abilities"] input.ability-layout[value="6"] + .ability-content input.melee {
    width: 100%;
}


.repcontainer[data-groupname="repeating_abilities"] .repitem:first-child .hr {
    display: none;
}

.repcontainer[data-groupname="repeating_abilities"] input[type=text] {
    width: 100%;
}

.repcontainer[data-groupname="repeating_abilities"] input.ability-collapse[value="1"] + .ability-body {
    display: none;
}

.repcontainer[data-groupname="repeating_abilities"] .collapse-header {
    display: grid;
    grid-gap: 3px;
    grid-template-columns: fit-content(100%) 1fr fit-content(100%) fit-content(100%) fit-content(100%);
}

.repcontainer[data-groupname="repeating_abilities"] .collapse-header button {
    width: 12px;
}

.repcontainer[data-groupname="repeating_abilities"] .collapse-attack-top {
    display: grid;
    grid-gap: 3px;
    grid-template-columns: fit-content(100%) 1fr fit-content(100%) fit-content(100%) fit-content(100%) fit-content(100%);
}

.repcontainer[data-groupname="repeating_abilities"] .collapse-attack-bottom {
    display: grid;
    grid-gap: 3px;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

.repcontainer[data-groupname="repeating_abilities"] .collapse-attack-top span {
    position: relative;
    top: 4px;
}